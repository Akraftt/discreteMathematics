{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1053{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset1 Cambria Math;}{\f2\fnil Cambria Math;}{\f3\fnil\fcharset0 Cambria Math;}}
{\colortbl ;\red0\green0\blue255;\red255\green255\blue0;\red0\green255\blue0;\red0\green255\blue255;\red255\green0\blue255;\red0\green128\blue128;}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mmathFont1\mwrapIndent1440 }\viewkind4\uc1 
\pard\sl240\slmult1 {\f0\fs22{\field{\*\fldinst{HYPERLINK https://www.youtube.com/watch?v=KCMGWRoPuMY&list=PLHXZ9OQGMqxersk8fUxiUMSIx0DBqsKZS&index=30 }}{\fldrslt{https://www.youtube.com/watch?v=KCMGWRoPuMY&list=PLHXZ9OQGMqxersk8fUxiUMSIx0DBqsKZS&index=30\ul0\cf0}}}}\b\f0\fs24\lang1053\par
Relations\b0\fs22\par
\par
\b\fs24 Reflexive\b0\fs22\par
\f1\u8704?\f0\lang1053 x \highlight2 x\highlight0 R\highlight2 x\highlight0\par
For all x. x is related to x (xRx), it comes back to itself.\par
four is an element of x (4\f1\u8712?\f0\lang1053 X) = (4R4)\f2\par
\f0\lang29\par
\b\fs24 Symmetric\b0\fs22\par
\f1\u8704?\highlight2\f0\lang1053 x\highlight0\f1\u8704?\highlight3\f0\lang1053 y\highlight0  \tab\tab\highlight2 x\highlight0 R\highlight3 y\highlight0  = \highlight3 y\highlight0 R\highlight2 x\highlight0\lang29\par
For all elements x and for all elements y. x is related to y (xRy) and y related to x (yRx)\par
\highlight2 4\highlight0  is not equal to \highlight3 3\highlight0\par
\highlight3 3\highlight0  is not equal to \highlight2 4\highlight0\par
\par
\b\fs24 Transitive\b0\fs22\lang1053\par
\highlight2\f1\u8704?\f0\lang1053 x\highlight3\f1\u8704?\f0\lang1053 y\highlight4\f1\u8704?\f0\lang1053 z\highlight0  \tab\highlight2 x\highlight5 R\highlight3 y\highlight0  \f1\u8743?\f0\lang1053  \highlight3 y\highlight5 R\highlight4 z\highlight0  --\lang1033 > \highlight2 x\highlight5 R\highlight4 z\highlight0\f2\par
\f0\lang1053 For 3 elements:  \highlight2 All x\highlight0 . \highlight3 All y\highlight0 . \highlight4 All z\highlight0\par
if \highlight2 x\highlight0  is related to \highlight3 y\highlight0  (xRy) and \highlight3 y\highlight0  is related to \highlight4 z\highlight0  (\highlight3 y\highlight0 R\highlight4 z\highlight0 ) then x is also related to z (\highlight2 x\highlight0 R\highlight4 z\highlight0 )\par
\par
---------------------------------------------------------------------------------------\par
\par
\b\fs24 Binary Relations\b0\fs22\par
xpy implies the orderd pair of (x,y)\par
set S = \{1,2,4\}\par
S multiplied with it self (S x S)\par
\{(1,1), (1,2), (1,4), (2,1), (2,2), (2,4), (4,1), (4,2), (4,4)\}\par
\par
Ordered Paris (a,b)\par
- Order matters\par
(\highlight4 a\highlight0 ,\highlight3 b\highlight0 ) = (\highlight2 c\highlight0 ,\highlight6 d\highlight0 ) if \highlight4 a\highlight0  = \highlight2 c\highlight0  & \highlight3 b\highlight0  = \highlight6 d\par
\highlight0 (a,b) is equal to (c,b) if (c=a) and (b=d) both has same place, orders matter.\par
---------------------------------------------------------------------------------------\par
\par
\b Cartesian Products \b0 - A x B\par
- All possible orderd pairs.\par
\{a,b\} x \{0,1\}\par
A = \{a,b\} \par
B = \{0,1\}\par
A x B = \{(a,0), (a,1), (b,0), (b,1)\}\par
\par
---------------------------------------------------------------------------------------\par
\b Functions.\b0\par
f(x) = x\super 2\nosupersub\par
(x) - Input\par
x\super 2\nosupersub  - Output\par
Vertical line test = tests if the function has (one) output. For example in a graph the vertical line will only cross the output once.\par
\ul domain (Input) = set of all possible inputs.\par
Range (Output) = set of possible outputs.\par
\par
\ulnone\b Goal of a function.\b0\par
1) Do something to every input in my domain\par
2) One output for every possible input. One input returns one output\par
---------------------------------------------------------------------------------------\par
\par
p: 5 > 2 True\par
q: 2 < 5 False\par
r: x > 2 Not a statment\par
p,q & r are statments instead of saying 5 > 2 is true, you can just say p = true.\par
\par
\'acp\tab not p\tab\tab the opposite\par
\f3 p \f1\u8743?\f3\lang1053  q\tab p and q\tab\tab both mut be true\tab\tab Conjunction "and"\f2\par
\f3 p \f2 V\f3  q\tab p or q\tab\tab only one has to be true.\tab Disjunction "or"\par
\f0\par
---------------------------------------------------------------------------------------\par
Negating a conditional\par
\'ac(p -\lang1033 > q)\tab Not(p imples q)\lang1053\par
\'ac(p -\lang1033 > q) is the same as \lang1053\'ac(\'acp \f2 V\f3  \f0 q)\par
\par
De morgans law:\par
Start: \'ac(\'acp \f2 V\f3  \f0 q)\par
End: (\'ac\'acp \f1\u8743?\f3\lang1053  \f0\'ac\f3 q)\par
the \f0 not sign(\'ac) is applied to everything inside the parentheses.\par
\'acp is now \'ac\'acp (not not p)\par
or \f2 V\f3  is now \f1\u8743?\f3\lang1053 , the opposite.\par
q is now \f0\'acq (not q)\par
\par
Double negation:\par
(\'ac\'acp \f1\u8743?\f3\lang1053  \f0\'ac\f3 q)\par
\f0\'ac\'acp = p\par
p \f1\u8743?\f3\lang1053  \f0\'ac\f3 q\f0\par
\par
---------------------------------------------------------------------------------------\par
Contrapositiv of a conditional.\par
p -\lang1033 > q same as \lang1053\'acq -\lang1033 > \lang1053\'acp\par
p implies q (same) not q imples not p.\par
\par
---------------------------------------------------------------------------------------\par
Converse of a statment\par
p --\lang1033 > q\par
q \lang1053 --\lang1033 > p\par
are not logically equvalent.\par
\lang1053\par
---------------------------------------------------------------------------------------\par
Modus Ponens\par
if \highlight4 p\highlight0 , then \highlight3 q\highlight0 .\par
\highlight4 p\highlight0 .\par
therefor, \highlight3 q\highlight0 .\par
\par
\highlight4 i did my homework\highlight0 , \highlight3 i got rewarded\highlight0\par
\highlight4 did my homework\highlight0\par
\highlight3 got rewarded.\highlight0\par
\par
--------------------------------------------------------------------------------------\par
Modus Tollens\par
if \highlight4 p\highlight0 , then \highlight3 q\highlight0 .\par
\highlight3\'acq\highlight0\par
therefore, \highlight4\'acp\highlight0\par
\par
if \highlight4 im rich \highlight0 then \highlight3 i have a lot of money\highlight0\par
i \highlight3 do not have a lot of money\par
\highlight0 therefore \highlight4 im not rich\highlight0\par
\par
--------------------------------------------------------------------------------------\par
\b Generalization\b0\par
\highlight4 p\highlight0 .\par
therefore, \highlight4 p\highlight0  V \highlight3 q.\par
\highlight0\par
\highlight4 Im swedish\highlight0\par
therefore, \highlight4 im swedish \highlight0 or \highlight3 purple\par
\highlight0 True, if im purple or not does not matter.\par
\par
-------------------------------------------------\par
\b Specialization.\b0\par
\highlight4 p\highlight0  \f1\u8743?\f3\lang1053  \highlight3 q\highlight0 .\par
therefore, p.\f0\par
\par
\highlight4 im swedish \highlight0 and \highlight3 im tall.\highlight0\par
therefor,\highlight4  im swedish.\par
\highlight0\par
-------------------------------------------------\par
\b Contradiction\par
\b0\'acp --\lang1033 >  c\par
therefore, p.\lang1053\par
\par
goal: prove statment p.\par
Assume false, and find a contradiction. Then you have proven p to be true.\par
\par
\par
--------------------------------------------------------------------------------------\par
\b Traning.\b0\par
\par
\highlight4 If im skilled at poker\highlight0 , \highlight3 then i will win\highlight0 .\par
\highlight3 I won money playing poker\highlight0\par
therefore, \highlight4 im skilled at poker\highlight0\par
\par
\highlight4 p\highlight0  --\lang1033 > \highlight3 q\highlight0\par
\highlight3 q\highlight0\par
therefore, \highlight4 p\par
\par
\highlight0 This is using converse, therefore this does not work.\par
trying to use converse, not logically equivellent.\par
- Invalid argument.\highlight4\lang1053\par
\highlight0 --------------------------------------------------------------------------------------\par
Predicate = Sentence depending on variables.\par
\par
x \lang1033 > 5\par
We cannot know if this is true or false.\par
But if x, our predicate becomes ex: 7. Then we can draw a conclusion: True.\par
\par
P(x): x is a factor of 12 with domain Z+\par
- x is a factor with domain of natural integers.\par
\lang1053 P(6) True, 6 is a factor of 12 within the domain Z+\par
P(5) False, 5 is not a factor of 12, but is within the domain Z+\par
\par
\par
[x \f1\u8712?\f3\lang1053  D \f1\u8739? P(x) \}\par
- x is an element of D, such that p(x)\par
TS = [1,2,3,4,6,12\} factors of 12.\par
\ul C\ulnone  subet of C Z+\par
(only positiv), negativ can be factors of 12 aswell.\f0\par
\par
\par
\lang1053 --------------------------------------------------------------------------------------\par
Negating: \f1\u8704?\f3\lang1053  & \f1\u8707?\par
\par
Negate "\u8704?\f3\lang1053 x \f1\u8712? Z+, x \f3\lang1033 > 3\lang1053 "\par
For all x, which is an elemnt of positiv integers. x is larger than 3.\par
- If it is a positiv int, then its larger than 3.\par
\par
This statment is false, because there exist 3 positiv integers that are less or equal to 3.\par
\f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 +,  x not\lang1033 > 3\par
\par
\par
\f0\lang1053\'ac\f3 (\f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 D, (px) ) same as \f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 D, \f0\'acP(x)\f3\par
for all X:s in a domain some property is true.\par
\f0\par
\par
Negate:\par
Somone in our class is taller than 180 cm.\par
\f1\u8707?\f3\lang1053 x \f1\u8712? \f3\lang1053 D, P(x)\f0\par
\f1\u8707?\f3\lang1053 x - there exists somone in our class.\f0\par
\f1\u8712? \f3\lang1053 D - an element of our class, D = class. \f1\u8712?\f3\lang1053  = in our class.\f0\par
P(x) - x is taller than 180 cm.\par
\par
Negation:\par
\'ac\f3 (\f1\u8707?\f3\lang1053 x \f1\u8712? \f3\lang1053 D, P(x) )\par
Nobody is taller than 180cm, everyone is shorter than 180cm.\par
\f1\u8704?\f3\lang1053 x \f1\u8712? \f3\lang1053 D, \f0\'acp(x)\par
Everyone (\f1\u8704?\f3\lang1053 x) \f0 in our class (\f1\u8712? \f3\lang1053 D)\f0 , is not taller than 180cm \'acp(x)\par
\par
--------------------------------------------------------------------------------------\par
Negating multiple quantifiers.\par
\par
"\highlight4 Every integer \highlight3 has a larger integer\highlight0 "\par
\highlight4\f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 Z\highlight0\par
Every integer (all x is an element of integers)\par
\par
\highlight3\f0 has a larger integer\highlight0\par
\highlight3\f1\u8707?\f3\lang1053 y \f1\u8712?\f3\lang1053 X, \lang1033 y > x\highlight0\par
\lang1053 There exist some y, that is an element of integers. That is larger than x\f0\par
\par
True:\par
y = x+1 \f1\u8712?\f3\lang1053 Z\par
\par
Negation.\par
\f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 Z is now: \f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 Z\tab .\par
Swapped for all to there exist\par
\par
\f1\u8707?\f3\lang1053 y \f1\u8712?\f3\lang1053 X is now: \f1\u8704?\f3\lang1053 y \f1\u8712?\f3\lang1053 Z, y \ul\lang1033 <\ulnone  x\par
Swapped: from there exist to for all y.\par
and reverse larger than to less and equal.\par
\par
final, which is false.\par
\f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 Z, \f1\u8704?\f3\lang1053 y \f1\u8712?\f3\lang1053 Z, y \ul\lang1033 <\ulnone  x\f0\par
\par
\lang1053 --------------------------------------------------------------------------------------\par
\par
Some number in D is the largest.\par
\f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 D. P(x)\par
Some x is an element of D, P(x)\par
\par
Expand: P(x)\par
\f1\u8704?\f3\lang1053 y \f1\u8712?\f3\lang1053 D, x \ul >\ulnone  y\par
For all y in the domain D, x is bigger or equal to y.\par
= For all ys, x is bigger than it.\f0\par
\par
Negate: \f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 D, \f1\u8704?\f3\lang1053 y \f1\u8712?\f3\lang1053 D, x \ul >\ulnone  y\par
\f1\u8707?\f3\lang1053 x \f1\u8712?\f3\lang1053 D = \f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 D\par
\f1\u8704?\f3\lang1053 y \f1\u8712?\f3\lang1053 D, x \ul >\ulnone  y = \f1\u8707?\f3\lang1053 y \f1\u8712?\f3\lang1053 D, x \ul\lang1033 <\ulnone  y\lang1053\par
\f0 = \f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 D, \f1\u8707?\f3\lang1053 y \f1\u8712?\f3\lang1053 D, x \lang1033 < y\f0\lang1053\par
\par
--------------------------------------------------------------------------------------\par
P(x) =\f3 > Q(x)\f0\par
\par
translates to:\par
\f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 D, P(x) --> Q(x)\f2\par
\f3 for all x we plug in the domain D imples q(x) for that value.\par
\par
if x is \ul >\ulnone 190 cm, then x is tall.\par
P(x)\tab\tab   Q(x)\par
Domain (D) = people in sweden for example.\par
\f0\par
\par
--------------------------------------------------------------------------------------\par
If \highlight4 A(x)\highlight0 , then \highlight3 B(x) \par
\highlight0 Is the same as\par
if \highlight3\'acB(x), \highlight0 then \highlight4\'acA(x)\par
\highlight0\par
Example.\par
If x is a \highlight4 Square\highlight0 , then x is a \highlight3 Rectangle\par
\highlight0 If is \highlight4 not a Square\highlight0 , then x is \highlight3 not a Rectangle\highlight0\par
\par
--------------------------------------------------------------------------------------\par
Therom:\par
Even integer + an odd intger = odd integer\par
example: 2(even) + 3(odd) = 5 (odd)\par
\par
Formal definitions.\par
Even: n = 2k \tab 2x2 = 4\par
Odd: = 2k + 1\tab 2x2+1 = 5\par
\par
M - Even (k1)\par
N - Odd\tab    (k2)\par
\par
\f1\u8707?\f3\lang1053 k1 \f1\u8712?\f3\lang1053 Z and \f1\u8707?\f3\lang1053 k2 \f1\u8712?\f3\lang1053 Z so that:\par
\highlight3 m\highlight0  = \highlight4 2k1\highlight0\par
\highlight4 n\highlight0  = \highlight3 2k2 + 1\highlight0\par
\par
m + n = (\highlight4 2k1\highlight0 )+(\highlight3 2k2+1\highlight0 )\f0\par
= 2(\highlight4 k1\highlight0  + \highlight3 k2\highlight0 )+1\par
\par
\highlight2 k3\highlight0  = \highlight4 k1\highlight0  + \highlight3 k2\par
m\highlight0  + \highlight4 n\highlight0  = 2\highlight2 k3\highlight0  + 1\highlight3\par
\highlight0\par
--------------------------------------------------------------------------------------\par
Therom:\par
Even integer x And even integer = even integer\par
2 x 4 = 8, 2 x 6 = 12, 6 x 8 = 48 . . . .\par
2 x 2\super 2\nosupersub  = 2\super 3\nosupersub , 2 x 2\super 3\nosupersub  = 2\super 4\nosupersub\par
\par
4 x 8 = 32\par
4 = 2(2)\par
8 = 2(4)\par
2(2x2x4)\par
\par
Theorem Formally:\par
\f1\u8704?\f3\lang1053 m,n \f1\u8712?\f3\lang1053 Z, if m,n are even, then the product m(n) is even.\par
\par
Proof:\par
Suppose m and n are even integers.\par
\f1\u8707?\f3\lang1053 r m = 2r\tab m = r x r\par
\f1\u8707?\f3\lang1053 s n = 2s\tab n = s x s\par
then mn = (2r)(2s)\par
= 2(2rs)\par
t = 2rs, t is an integer\par
mn = 2t\f0\par
\par
\par
--------------------------------------------------------------------------------------\par
Proof by Contradiction\par
\'acp --\f3\lang1033 > C\par
therefor, p.\par
\par
Theorem: No integer is both even and odd.\par
\f1\u8704?\f3\lang1053 n \f1\u8712?\f3\lang1053 Z, n (n is even and odd)\par
for every integer, it is not the case n is even and odd\par
\par
Assume false: Add negation.\par
\f0\'ac\f3 ( \f1\u8704?\f3\lang1053 n \f1\u8712?\f3\lang1053 Z, n (n is even and odd) )\par
\f1\u8707?\f3\lang1053 n \f1\u8712?\f3\lang1053 Z, n is even\f0\par
\par
--------------------------------------------------------------------------------------\par
Mathematical Induction.\par
1 + 2 + 3 + . . . . + n = n(n+1)/2, for all n above 1.\par
\par
n = 1\par
1 = 1(1+1)/2\par
\par
n = 2\par
1 + 2 = 3\par
2(2+1)/2 = 3\par
\par
n = 3\par
1 + 2 + 3 = 6\par
3(3+1)/2 = 6\par
\par
Prove: P(n) \f1\u8704?\f3\lang1053 n \ul >\ulnone  1\f0\par
Prove P(1)\par
Prove P(k+1)\par
\par
Rewrite:\par
1 + 2 + 3 + . . . . + n = n(n+1)/2\par
1 + 2 + 3 + . . . . + k = k(k+1)/2\f2\par
\f0\par
1 + 2 + 3 + . . . . + k \par
same as:\par
k(k+1)/2 + (k+1)/2\par
\par
--------------------------------------------------------------------------------------\par
\par
A = \{1,2,3\} \par
\par
P(A) = \{ 1,2,3\par
\tab 1,2 1,3 2,3\par
\tab 1,2,3 nothing \}\par
2\super 3 \nosupersub = 8\par
\par
--------------------------------------------------------------------------------------\par
\highlight2 Reflexive\highlight0\par
xRx, \f1\u8704?\f3\lang1053 x \f1\u8712?\f3\lang1053 A\par
x is a related to x, for all x thats an element of a.\f0\par
\par
\highlight4 Symmetric\highlight0\par
\f1\u8704?\f3\lang1053 x, y \f1\u8712?\f3\lang1053  A, if xRy then yRx\par
For all x, y is an element of a.\par
If x is related to y, then y is related to x.\par
\highlight3\par
Transitive\par
\highlight0\f1\u8704?\f3\lang1053 x, y, z \f1\u8712?\f3\lang1053  A, if xRy and yRz then xRz\par
For all x,y,z is an element of A.\par
is x is related to y, and y is related to z. Then x is related to z.\f0\par
\par
If an set has all three properties: Reflexive, Symmetric & \f3 Transitive = equivalance relation.\par
\highlight2\f0 Reflexive: \highlight0\f3 10 mod 3 = 1 (remainder)\f0\par
\highlight4 Symmetric\highlight0 : 7 mod 3 = 1 (remainder)\par
X is related to Y (10 mod 3, 7 mod 3)\par
7 mod 3 = 10 mod 3 (both are 1, remainder)\par
\highlight3\f3 Transitive \highlight0 13 mod 3 = 1\par
\f0\par
--------------------------------------------------------------------------------------\par
PE) = N(E)/N(S)\par
size of E()\par
size of N()\par
\par
3 - 14 inclusive\par
E(6) / N(12) = 0.5 \par
\par
--------------------------------------------------------------------------------------\par
Reorder the letter word: FORM\par
4 x 3 x 2 x 1 = 24 or 4!\par
4! = 4 x 3 x 2 x 1 (24)\par
\par
How many ways to order four letters from the word. FORMULA (7)\par
[1] [2] [3] [4]\par
7 x 6 x 5 x 4 = 840 \par
\par
7 x 6 x 5 x 4 x 3 x 2 x 1 = 7!\par
divded by       \par
                         3 x 2 x 1 = 3!\par
7! / 3!\par
7 factorial divded by 3 factorial.\par
\par
Permutations:\par
R items from N possibilities.\par
P(n, r) = n! / (n - r)!\par
P(7, 3) = 7! / (7 - 4)!\par
= 7! / 3!\par
\par
--------------------------------------------------------------------------------------\par
How many 1,2,3 leter passwords are there using 26 letters only.\par
26\super 1\nosupersub  + 26\super 2\nosupersub  + 26\super 3\nosupersub  = 18,278\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\lang29\par
}
 